// Torsten Sadowski
// SPDX-License-Identifier:  GPL-3.0-or-later

import { Button, GroupBox, LineEdit, VerticalBox} from "std-widgets.slint";
import { PwSettings } from "settings.slint";

export global MakePageCallback {
    pure callback url_edited(string) -> string;
    pure callback used_text_edited(string, string) -> string;
    pure callback pw_edited(string) -> string;
}

export component MakePage inherits VerticalBox {

    callback set_passwords();
    set_passwords() => {
        PwSettings.pw_created = MakePageCallback.used_text_edited(PwSettings.usedtext, PwSettings.master_pw);
        PwSettings.pw_verification = MakePageCallback.pw_edited(PwSettings.master_pw);
    }

    GroupBox {
        vertical-stretch: 0;
        title: @tr("Url");

        VerticalLayout {
            padding: 0px;

            url := LineEdit {
                placeholder-text: @tr("Enter url");
                text <=> PwSettings.urltext;
                edited(string) => {
                    use_text.text = MakePageCallback.url_edited(self.text);
                    set_passwords()
                }
            }
        }
    }

    GroupBox {
        vertical-stretch: 0;
        title: @tr("Used text");

        VerticalLayout {
            padding: 0px;

            use_text := LineEdit {
                placeholder-text: @tr("Override text");
                text <=> PwSettings.usedtext;
                edited(string) => {
                    set_passwords()
                }
            }
        }
    }

    GroupBox {
        title: @tr("Master Password");
        vertical-stretch: 0;

        masterPW := LineEdit {
            placeholder-text: @tr("Master Password");
            text <=> PwSettings.master_pw;
            edited(string) => {
                set_passwords()
            }
            input-type: PwSettings.HidePW;
        }

        Button {
            checkable: true;
            clicked => {
                if (self.checked) {
                    PwSettings.HidePW = InputType.text;
                } else {
                    PwSettings.HidePW = InputType.password;
                }
            }
            text: self.checked ? @tr("Hide") : @tr("Show");
        }
    }

    GroupBox {
        title: @tr("Master Password Verification Code");
        vertical-stretch: 0;

        verificationCode := LineEdit {
            text <=> PwSettings.pw_verification;
            enabled: false;
        }
    }

    GroupBox {
        title: @tr("Password");
        vertical-stretch: 0;

        password := LineEdit {
            placeholder-text: @tr("Password");
            text <=> PwSettings.pw_created;
            enabled: false;
        }

        Button {
            clicked => {
                password.select-all();
                password.copy();
                password.clear-selection();
            }
            text: @tr("Copy");
        }
    }

    GroupBox {
        vertical-stretch: 1;
    }
}
